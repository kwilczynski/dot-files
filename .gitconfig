[user]
        name = Krzysztof Wilczynski
        email = krzysztof.wilczynski@linux.com
[alias]
        a = add
        c = clone
        t = tag
        au = add -u .
        ap = add -p
        br = branch -v
        bl = blame
        cl = clean
        clf = clean --force
        clo = clone
        sh = show
        sb = show-branch
        ds = diff --stat
        ls = ls-files
        lo = log
        st = status
        co = checkout
        cp = cherry-pick
        ci = commit
        df = diff
        rb = rebase
        rbc = rebase --continue
        rbs = rebase --skip
        rbi = rebase --interactive
        rbr = rebase --root
        me = merge
        rs = remote show
        pu = pull
        pur = pull --rebase
        pus = submodule foreach git pull origin master
        purs = pull --recurse-submodules
        pull-all = pull --recurse-submodules -r
        pt = push --tags
        w = whatchanged
        wdc = diff --color-words --cache
        ddc = diff --cached
        dfs = diff --staged
        sts = status -s
        rl = reflog
        ref = reflog
        rst = reset
        rt = remote
        sm = submodule
        sts = stash
        stsp = stash pop
        stsd = stash drop
        sms = submodule status
        smi = submodule init
        smu = submodule update
        smf = submodule foreach
        rup = remote update
        rpr = remote prune
        cia = commit -a
        com = checkout master
        detach = checkout HEAD^0
        info = config --list
        summary = log --oneline
        rank = shortlog -sn --no-merges
        tree = log --graph --oneline --decorate
        ll = log --graph --pretty='format:%h | %an | %s'
        los = log --graph --oneline --abbrev-commit
        llog = log --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=iso
        po = push origin
        pom = push origin master
        changelog = log --pretty=format:'%Cgreen%d %Creset%s' --date=iso
        pob = !sh -c 'git push origin $(git branch -l 2> /dev/null | sed -e \"/^[^*]/d\" -e \"s/* \\(.*\\)/\\1/\")'
        amend = commit --amend
        last = log --oneline -10
        review = log --stat=160,180 -p -w --patience --reverse -M -C -C -c
        undo = reset --soft HEAD^
        serve = !git daemon --base-path=. --export-all --reuseaddr --informative-errors --verbose
        hub = !git daemon --base-path=. --export-all --enable=receive-pack --reuseaddr --informative-errors --verbose
[color]
        branch = auto
        diff = auto
        status = auto
        interactive = auto
        ui = true
        pager = true
[pack]
        threads = 0
[rename]
        limit = 0
[merge]
        log = true
[core]
        pager = less -FRSX
	excludesfile = /Users/kwilczynski/.gitignore_global
[credential]
        helper = osxkeychain
[push]
        default = current
[pull]
        rebase = true
[branch]
        autosetuprebase = always
[giggle]
        main-window-maximized = true
        main-window-view = HistoryView
[sendemail]
        smtpuser =
        smtppass =
        smtpserver =
        smtpserverport =
        smtpencryption = tls
        suppresscc = self
        signedoffbycc = false
        chainreplyto = false
[guthub]
        user = kwilczynski
        token = !security find-generic-password -gs \"github API token\" 2>&1 >/dev/null | awk '/password/ { print $2 }' | tr -d \\\"
[url "git@github.com:"]
        insteadOf = "gh:"
        pushInsteadOf = "github:"
        pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
        insteadOf = "github:"
[url "git@gist.github.com:"]
        insteadOf = "gst:"
        pushInsteadOf = "gist:"
        pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
        insteadOf = "gist:"
[diff]
        tool = diffmerge
        renames = copies
        mnemonicprefix = true
[difftool "diffmerge"]
        cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[merge]
        tool = diffmerge
[mergetool "diffmerge"]
        cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
        trustExitCode = true
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
