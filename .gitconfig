[includeIf "gitdir:~/Projects/Personal/"]
  path = ~/.gitconfig-personal

[includeIf "gitdir:~/Development/Projects/Personal/"]
  path = ~/.gitconfig-personal

[includeIf "gitdir:~/Projects/Personal/Linux/"]
  path = ~/.gitconfig-linux

[includeIf "gitdir:~/Development/Projects/Personal/Linux/"]
  path = ~/.gitconfig-linux

[includeIf "gitdir:~/Projects/Work/"]
  path = ~/.gitconfig-work

[includeIf "gitdir:~/Development/Projects/Work/"]
  path = ~/.gitconfig-work

[alias]
  a = add
  ame = amend
  c = clone
  cr = clone --recursive
  t = tag
  au = add -u .
  ap = add -p
  bl = blame
  br = branch -v
  bra = branch -a
  brd = branch-date
  brc = branch --contains
  brm = branch --merged
  brnm = branch --no-merged
  cl = clean
  clf = clean --force
  sh = show
  shm = !sh -c 'git show $(git origin)..HEAD'
  sb = show-branch
  ls = ls-files
  lo = log
  lof = log --follow
  st = status
  stb = status -sb
  s = status -s
  co = checkout
  cp = cherry-pick
  ci = commit
  df = diff
  ds = diff --stat
  dfs = diff --staged
  dfn = diff --name-only
  dfm = !sh -c 'git diff $(git name-rev --name-only $(git origin))'
  df1 = diff HEAD~
  df2 = diff HEAD~~
  df3 = diff HEAD~~~
  df4 = diff HEAD~~~~
  df5 = diff HEAD~~~~~
  ddc = diff --cached
  wdc = diff --color-words --cache
  rb = rebase
  rba = rebase --abort
  rbc = rebase --continue
  rbi = rebase --interactive
  rbm = !sh -c 'git rebase --interactive $(git origin) "$@"' -
  rbr = rebase --root
  rbs = rebase --skip
  me = merge
  rs = remote show
  remotes = remote -v
  pu = pull
  pur = pull --rebase
  pup = pull --prune
  purp = pull --prune --rebase
  puo = !sh -c 'git pull upstream $(git origin)'
  pus = !sh -c 'git submodule foreach git pull origin $(git origin)'
  purs = pull --recurse-submodules
  pull-all = pull --recurse-submodules -r
  pt = push --tags
  tags = tag -l
  w = whatchanged
  wo = whatchanged --oneline
  wn = whatchanged --name-only --oneline
  wno = whatchanged --pretty='format:' --name-only
  sts = status -s
  rl = reflog
  ref = reflog
  rst = reset
  rr = restore
  rt = remote
  se = send-email
  sm = submodule
  sts = stash
  stsp = stash pop
  stsd = stash drop
  stash-all = stash save --include-untracked
  sms = submodule status
  smi = submodule init
  smu = submodule update
  smf = submodule foreach
  rup = remote update
  rpr = remote prune
  cia = commit -a
  com = !sh -c 'git checkout $(git origin)'
  cob = checkout -b
  cod = checkout develop
  sw = switch
  swc = switch -c
  detach = checkout HEAD^0
  info = config --list
  summary = log --oneline
  rank = shortlog -sn --no-merges
  tree = log --graph --oneline --decorate
  ll = log --graph --pretty='format:%h | %an | %s'
  los = log --graph --oneline --abbrev-commit
  lok = log --oneline --abbrev-commit --pretty='%h (\"%s\")'
  lom = !sh -c 'git log $(git origin)..HEAD "$@"' -
  lokm = !sh -c 'git log --oneline --abbrev-commit --pretty=\"%h (\\\"%s\\\")\" $(git origin)..HEAD "$@"' -
  llog = log --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=iso
  fp = format-patch
  fpm = !sh -c 'git format-patch $(git origin)..HEAD "$@"' -
  po = push origin
  pom = !sh -c 'git push origin $(git origin) "$@"' -
  changelog = log --pretty=format:'%Cgreen%d %Creset%s' --date=iso
  pob = !sh -c 'git push origin $(git branch -l 2> /dev/null | sed -e \"/^[^*]/d\" -e \"s/* \\(.*\\)/\\1/\") "$@"' -
  purb = !sh -c 'git pull origin $(git branch -l 2> /dev/null | sed -e \"/^[^*]/d\" -e \"s/* \\(.*\\)/\\1/\") --rebase "$@"' -
  amend = commit --amend --reuse-message=HEAD
  amende = commit --amend
  last = log --oneline -10
  review = log --stat=160,180 -p -w --patience --reverse -M -C -C -c
  undo = reset --soft HEAD^
  serve = !git daemon --base-path=. --export-all --reuseaddr --informative-errors --verbose
  hub = !git daemon --base-path=. --export-all --enable=receive-pack --reuseaddr --informative-errors --verbose
  this = !git init && git add . && git commit -m \"Initial commit.\"
  empty = !git init && git commit --allow-empty -m \"Initial commit.\"
  r = !git ls-files -z --deleted | xargs -0 git rm
  wd = !git diff | delta --features='default no-line-numbers' --true-color='always' --color-only | less -FRSX
  update-author = !sh -c 'git rebase --onto $1 --exec \"git commit --amend --author=$2\" $1' --
  origin = !git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
  branch-date = !git for-each-ref --sort='-committerdate:iso8601' --format='%(committerdate:iso8601)|%(committerdate:relative)|%(committername)|%(refname:short)' refs/heads/ | column -s '|' -t
  tag-date = !git for-each-ref --sort='-taggerdate' --format='%(taggerdate:iso8601)|%(taggerdate:relative)|%(taggername)|%(tag)|%(subject)' refs/tags/ | column -s '|' -t
  wa = worktree add
  wl = worktree list --verbose
  wr = worktree remove
  wp = worktree prune --verbose

[delta]
  tabs = 0
  keep-plus-minus-markers = true
  inspect-raw-lines = false
  features = default
  true-color = always

[delta "default"]
  dark = true
  syntax-theme = zenburn
  line-numbers = true

[delta "no-line-numbers"]
  line-numbers = false

[color]
  branch = auto
  diff = auto
  status = auto
  interactive = auto
  ui = true
  pager = true

[pack]
  threads = 0
  useBitmapBoundaryTraversal = true

[rename]
  limit = 0

[checkout]
  workers = 0

[merge]
  log = true
  renamelimit = 2048
  tool = diffmerge
  conflictstyle = diff3

[diff]
  algorithm = histogram
  renames = copies
  submodule = diff
  mnemonicprefix = true
  compactionHeuristic = true
  indentHeuristic = true
  colorMoved = dimmed_zebra

[core]
  autocrlf = input
  pager = delta --true-color='always'
  excludesfile = ~/.gitignore-global
  trustctime = true
  quotepath = false
  untrackedCache = true
  fsync = loose-objec
  fsyncMethod = batch

[interactive]
  diffFilter = delta --color-only

[init]
  templatedir = ~/.git-templates
  defaultBranch = main

[credential]
  helper = store

[credential "https://github.com"]
  username = kwilczynski

[gpg]
  program = gpg

[push]
  default = current
  followTags = true

[pull]
  rebase = true

[fetch]
  prune = true

[rebase]
  autosquash = true

[tag]
  forceSignAnnotated = true

[branch]
  autosetuprebase = always

[url "git@github.com:"]
  insteadOf = gh:
  pushInsteadOf = github:
  pushInsteadOf = git://github.com/

[url "git@github.com:"]
    insteadOf = https://github.com/

[url "git://github.com/"]
  insteadOf = github:

[url "git@gist.github.com:"]
  insteadOf = gst:
  pushInsteadOf = gist:
  pushInsteadOf = git://gist.github.com/

[url "git://gist.github.com/"]
  insteadOf = gist:

[url "git@bitbucket.org:"]
  insteadOf = https://bitbucket.org/

[filter "media"]
  clean = git-media-clean %f
  smudge = git-media-smudge %f

[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  process = git-lfs filter-process
  smudge = git-lfs smudge -- %f
