#!/bin/bash
#
# Bash completion generated for 'triton' at Thu Mar 22 2018 11:33:11 GMT+0100 (CET).
#
# The original template lives here:
# https://github.com/trentm/node-dashdash/blob/master/etc/dashdash.bash_completion.in
#

#
# Copyright 2016 Trent Mick
# Copyright 2016 Joyent, Inc.
#
#
# A generic Bash completion driver script.
#
# This is meant to provide a re-usable chunk of Bash to use for
# "etc/bash_completion.d/" files for individual tools. Only the "Configuration"
# section with tool-specific info need differ. Features:
#
# - support for short and long opts
# - support for knowing which options take arguments
# - support for subcommands (e.g. 'git log <TAB>' to show just options for the
#   log subcommand)
# - does the right thing with "--" to stop options
# - custom optarg and arg types for custom completions
# - (TODO) support for shells other than Bash (tcsh, zsh, fish?, etc.)
#
#
# Examples/design:
#
# 1. Bash "default" completion. By default Bash's 'complete -o default' is
#    enabled. That means when there are no completions (e.g. if no opts match
#    the current word), then you'll get Bash's default completion. Most notably
#    that means you get filename completion. E.g.:
#       $ tool ./<TAB>
#       $ tool READ<TAB>
#
# 2. all opts and subcmds:
#       $ tool <TAB>
#       $ tool -v <TAB>     # assuming '-v' doesn't take an arg
#       $ tool -<TAB>       # matching opts
#       $ git lo<TAB>       # matching subcmds
#
#    Long opt completions are given *without* the '=', i.e. we prefer space
#    separated because that's easier for good completions.
#
# 3. long opt arg with '='
#       $ tool --file=<TAB>
#       $ tool --file=./d<TAB>
#    We maintain the "--file=" prefix. Limitation: With the attached prefix
#    the 'complete -o filenames' doesn't know to do dirname '/' suffixing. Meh.
#
# 4. envvars:
#       $ tool $<TAB>
#       $ tool $P<TAB>
#    Limitation: Currently only getting exported vars, so we miss "PS1" and
#    others.
#
# 5. Defer to other completion in a subshell:
#       $ tool --file $(cat ./<TAB>
#    We get this from 'complete -o default ...'.
#
# 6. Custom completion types from a provided bash function.
#       $ tool --profile <TAB>        # complete available "profiles"
#
#
# Dev Notes:
# - compgen notes, from http://unix.stackexchange.com/questions/151118/understand-compgen-builtin-command
# - https://www.gnu.org/software/bash/manual/html_node/Programmable-Completion-Builtins.html
#


# Debugging this completion:
#   1. Uncomment the "_triton_log_file=..." line.
#   2. 'tail -f /var/tmp/dashdash-completion.log' in one terminal.
#   3. Re-source this bash completion file.
#_triton_log=/var/tmp/dashdash-completion.log

function _triton_completer {

    # ---- cmd definition

    local cmd_shortopts="-U -a -h -i -k -p -r -u -v"
local cmd_longopts="--account --help --insecure --keyId --profile --role --url --user --verbose --version"
local cmd_optargs="--accept-version=string --account=string --act-as=string --keyId=string --profile=tritonprofile --role=arrayOfCommaSepString --url=string --user=string -J=string -U=string -a=string -k=string -p=tritonprofile -r=arrayOfCommaSepString -u=string"
local cmd_subcmds="account completion create datacenters delete env fwrule help image img info inst instance instances insts ip key ls network package pkg profile reboot rm services ssh start stop"
local cmd_allsubcmds="account badger cloudapi completion create datacenters delete env fwrule fwrules help image images img imgs info inst instance instances insts ip key keys ls network networks package packages pkg pkgs profile profiles rbac reboot rm services ssh start stop vol vols volume volumes"

local cmd__account_shortopts="-h"
local cmd__account_longopts="--help"
local cmd__account_optargs=""
local cmd__account_subcmds="get help update"
local cmd__account_allsubcmds="get help update"

local cmd__account__get_shortopts="-h -j"
local cmd__account__get_longopts="--help --json"
local cmd__account__get_optargs=""

local cmd__account__help_shortopts=""
local cmd__account__help_longopts=""
local cmd__account__help_optargs=""

local cmd__account__update_argtypes="tritonupdateaccountfield"
local cmd__account__update_shortopts="-f -h"
local cmd__account__update_longopts="--file --help"
local cmd__account__update_optargs="--file=string -f=string"

local cmd__badger_shortopts=""
local cmd__badger_longopts=""
local cmd__badger_optargs=""

local cmd__cloudapi_shortopts="-H -X -d -h -i"
local cmd__cloudapi_longopts="--data --header --headers --help --method"
local cmd__cloudapi_optargs="--data=string --header=arrayOfString --method=string -H=arrayOfString -X=string -d=string"

local cmd__completion_shortopts="-h"
local cmd__completion_longopts="--help"
local cmd__completion_optargs=""

local cmd__create_argtypes="tritonimage tritonpackage none"
local cmd__create_shortopts="-M -N -a -h -j -m -n -t -w"
local cmd__create_longopts="--affinity --brand --dry-run --firewall --help --json --metadata --metadata-file --name --network --script --tag --wait"
local cmd__create_optargs="--affinity=tritonaffinityrule --brand=string --metadata-file=arrayOfString --metadata=arrayOfString --name=string --network=tritonnetwork --script=arrayOfString --tag=arrayOfString --volume=arrayOfString -M=arrayOfString -N=tritonnetwork -a=tritonaffinityrule -m=arrayOfString -n=string -t=arrayOfString -v=arrayOfString"

local cmd__datacenters_shortopts="-H -h -j -o -s"
local cmd__datacenters_longopts="--help --json"
local cmd__datacenters_optargs="-o=string -s=string"

local cmd__delete_argtypes="tritoninstance"
local cmd__delete_shortopts="-h -w"
local cmd__delete_longopts="--help --wait"
local cmd__delete_optargs=""

local cmd__env_argtypes="tritonprofile none"
local cmd__env_shortopts="-d -h -s -t -u"
local cmd__env_longopts="--docker --help --smartdc --triton --unset"
local cmd__env_optargs=""

local cmd__fwrule_shortopts="-h"
local cmd__fwrule_longopts="--help"
local cmd__fwrule_optargs=""
local cmd__fwrule_subcmds="create delete disable enable get help instances insts list ls rm update"
local cmd__fwrule_allsubcmds="create delete disable enable get help instances insts list ls rm update"

local cmd__fwrule__create_shortopts="-D -d -h -j"
local cmd__fwrule__create_longopts="--description --disabled --help --json"
local cmd__fwrule__create_optargs="--description=string -D=string"

local cmd__fwrule__delete_argtypes="tritonfwrule"
local cmd__fwrule__delete_shortopts="-f -h"
local cmd__fwrule__delete_longopts="--force --help"
local cmd__fwrule__delete_optargs=""

local cmd__fwrule__disable_argtypes="tritonfwrule"
local cmd__fwrule__disable_shortopts="-h"
local cmd__fwrule__disable_longopts="--help"
local cmd__fwrule__disable_optargs=""

local cmd__fwrule__enable_argtypes="tritonfwrule"
local cmd__fwrule__enable_shortopts="-h"
local cmd__fwrule__enable_longopts="--help"
local cmd__fwrule__enable_optargs=""

local cmd__fwrule__get_argtypes="tritonfwrule none"
local cmd__fwrule__get_shortopts="-h -j"
local cmd__fwrule__get_longopts="--help --json"
local cmd__fwrule__get_optargs=""

local cmd__fwrule__help_shortopts=""
local cmd__fwrule__help_longopts=""
local cmd__fwrule__help_optargs=""

local cmd__fwrule__instances_argtypes="tritonfwrule none"
local cmd__fwrule__instances_shortopts="-H -h -j -l -o -s"
local cmd__fwrule__instances_longopts="--help --json --long"
local cmd__fwrule__instances_optargs="-o=string -s=string"

local cmd__fwrule__insts_argtypes="tritonfwrule none"
local cmd__fwrule__insts_shortopts="-H -h -j -l -o -s"
local cmd__fwrule__insts_longopts="--help --json --long"
local cmd__fwrule__insts_optargs="-o=string -s=string"

local cmd__fwrule__list_shortopts="-H -h -j -l -o -s"
local cmd__fwrule__list_longopts="--help --json --long"
local cmd__fwrule__list_optargs="-o=string -s=string"

local cmd__fwrule__ls_shortopts="-H -h -j -l -o -s"
local cmd__fwrule__ls_longopts="--help --json --long"
local cmd__fwrule__ls_optargs="-o=string -s=string"

local cmd__fwrule__rm_argtypes="tritonfwrule"
local cmd__fwrule__rm_shortopts="-f -h"
local cmd__fwrule__rm_longopts="--force --help"
local cmd__fwrule__rm_optargs=""

local cmd__fwrule__update_argtypes="tritonfwrule tritonupdatefwrulefield"
local cmd__fwrule__update_shortopts="-f -h"
local cmd__fwrule__update_longopts="--file --help"
local cmd__fwrule__update_optargs="--file=string -f=string"

local cmd__fwrules_shortopts="-H -h -j -l -o -s"
local cmd__fwrules_longopts="--help --json --long"
local cmd__fwrules_optargs="-o=string -s=string"

local cmd__help_shortopts=""
local cmd__help_longopts=""
local cmd__help_optargs=""

local cmd__image_shortopts="-h"
local cmd__image_longopts="--help"
local cmd__image_optargs=""
local cmd__image_subcmds="create delete export get help list ls rm share unshare wait"
local cmd__image_allsubcmds="create delete export get help list ls rm share unshare wait"

local cmd__image__create_argtypes="tritoninstance file"
local cmd__image__create_shortopts="-d -h -j -t -w"
local cmd__image__create_longopts="--acl --description --dry-run --eula --help --homepage --json --tag --wait"
local cmd__image__create_optargs="--acl=arrayOfString --description=string --eula=string --homepage=string --tag=arrayOfString -d=string -t=arrayOfString"

local cmd__image__delete_argtypes="tritonimage"
local cmd__image__delete_shortopts="-f -h"
local cmd__image__delete_longopts="--force --help"
local cmd__image__delete_optargs=""

local cmd__image__export_argtypes="tritonimage none"
local cmd__image__export_shortopts="-h -j"
local cmd__image__export_longopts="--dry-run --help --json"
local cmd__image__export_optargs=""

local cmd__image__get_argtypes="tritonimage none"
local cmd__image__get_shortopts="-h -j"
local cmd__image__get_longopts="--help --json"
local cmd__image__get_optargs=""

local cmd__image__help_shortopts=""
local cmd__image__help_longopts=""
local cmd__image__help_optargs=""

local cmd__image__list_shortopts="-H -a -h -j -l -o -s"
local cmd__image__list_longopts="--all --help --json --long"
local cmd__image__list_optargs="-o=string -s=string"

local cmd__image__ls_shortopts="-H -a -h -j -l -o -s"
local cmd__image__ls_longopts="--all --help --json --long"
local cmd__image__ls_optargs="-o=string -s=string"

local cmd__image__rm_argtypes="tritonimage"
local cmd__image__rm_shortopts="-f -h"
local cmd__image__rm_longopts="--force --help"
local cmd__image__rm_optargs=""

local cmd__image__share_argtypes="tritonimage none"
local cmd__image__share_shortopts="-h -j"
local cmd__image__share_longopts="--dry-run --help --json"
local cmd__image__share_optargs=""

local cmd__image__unshare_argtypes="tritonimage none"
local cmd__image__unshare_shortopts="-h -j"
local cmd__image__unshare_longopts="--dry-run --help --json"
local cmd__image__unshare_optargs=""

local cmd__image__wait_argtypes="tritonimage"
local cmd__image__wait_shortopts="-h -s"
local cmd__image__wait_longopts="--help --states"
local cmd__image__wait_optargs="--states=arrayOfString -s=arrayOfString"

local cmd__images_shortopts="-H -a -h -j -l -o -s"
local cmd__images_longopts="--all --help --json --long"
local cmd__images_optargs="-o=string -s=string"

local cmd__img_shortopts="-h"
local cmd__img_longopts="--help"
local cmd__img_optargs=""
local cmd__img_subcmds="create delete export get help list ls rm share unshare wait"
local cmd__img_allsubcmds="create delete export get help list ls rm share unshare wait"

local cmd__img__create_argtypes="tritoninstance file"
local cmd__img__create_shortopts="-d -h -j -t -w"
local cmd__img__create_longopts="--acl --description --dry-run --eula --help --homepage --json --tag --wait"
local cmd__img__create_optargs="--acl=arrayOfString --description=string --eula=string --homepage=string --tag=arrayOfString -d=string -t=arrayOfString"

local cmd__img__delete_argtypes="tritonimage"
local cmd__img__delete_shortopts="-f -h"
local cmd__img__delete_longopts="--force --help"
local cmd__img__delete_optargs=""

local cmd__img__export_argtypes="tritonimage none"
local cmd__img__export_shortopts="-h -j"
local cmd__img__export_longopts="--dry-run --help --json"
local cmd__img__export_optargs=""

local cmd__img__get_argtypes="tritonimage none"
local cmd__img__get_shortopts="-h -j"
local cmd__img__get_longopts="--help --json"
local cmd__img__get_optargs=""

local cmd__img__help_shortopts=""
local cmd__img__help_longopts=""
local cmd__img__help_optargs=""

local cmd__img__list_shortopts="-H -a -h -j -l -o -s"
local cmd__img__list_longopts="--all --help --json --long"
local cmd__img__list_optargs="-o=string -s=string"

local cmd__img__ls_shortopts="-H -a -h -j -l -o -s"
local cmd__img__ls_longopts="--all --help --json --long"
local cmd__img__ls_optargs="-o=string -s=string"

local cmd__img__rm_argtypes="tritonimage"
local cmd__img__rm_shortopts="-f -h"
local cmd__img__rm_longopts="--force --help"
local cmd__img__rm_optargs=""

local cmd__img__share_argtypes="tritonimage none"
local cmd__img__share_shortopts="-h -j"
local cmd__img__share_longopts="--dry-run --help --json"
local cmd__img__share_optargs=""

local cmd__img__unshare_argtypes="tritonimage none"
local cmd__img__unshare_shortopts="-h -j"
local cmd__img__unshare_longopts="--dry-run --help --json"
local cmd__img__unshare_optargs=""

local cmd__img__wait_argtypes="tritonimage"
local cmd__img__wait_shortopts="-h -s"
local cmd__img__wait_longopts="--help --states"
local cmd__img__wait_optargs="--states=arrayOfString -s=arrayOfString"

local cmd__imgs_shortopts="-H -a -h -j -l -o -s"
local cmd__imgs_longopts="--all --help --json --long"
local cmd__imgs_optargs="-o=string -s=string"

local cmd__info_shortopts="-h -j"
local cmd__info_longopts="--help --json"
local cmd__info_optargs=""

local cmd__inst_shortopts="-h"
local cmd__inst_longopts="--help"
local cmd__inst_optargs=""
local cmd__inst_subcmds="audit create delete disable-firewall enable-firewall fwrules get help ip list ls reboot rename resize rm snapshot ssh start stop tag wait"
local cmd__inst_allsubcmds="audit create delete disable-firewall enable-firewall fwrule fwrules get help ip list ls reboot rename resize rm snapshot snapshots ssh start stop tag tags wait"

local cmd__inst__audit_argtypes="tritoninstance none"
local cmd__inst__audit_shortopts="-H -h -j -l -o -s"
local cmd__inst__audit_longopts="--help --json --long"
local cmd__inst__audit_optargs="-o=string -s=string"

local cmd__inst__create_argtypes="tritonimage tritonpackage none"
local cmd__inst__create_shortopts="-M -N -a -h -j -m -n -t -w"
local cmd__inst__create_longopts="--affinity --brand --dry-run --firewall --help --json --metadata --metadata-file --name --network --script --tag --wait"
local cmd__inst__create_optargs="--affinity=tritonaffinityrule --brand=string --metadata-file=arrayOfString --metadata=arrayOfString --name=string --network=tritonnetwork --script=arrayOfString --tag=arrayOfString --volume=arrayOfString -M=arrayOfString -N=tritonnetwork -a=tritonaffinityrule -m=arrayOfString -n=string -t=arrayOfString -v=arrayOfString"

local cmd__inst__delete_argtypes="tritoninstance"
local cmd__inst__delete_shortopts="-h -w"
local cmd__inst__delete_longopts="--help --wait"
local cmd__inst__delete_optargs=""

local cmd__inst__disable_firewall_argtypes="tritoninstance"
local cmd__inst__disable_firewall_shortopts="-h -w"
local cmd__inst__disable_firewall_longopts="--help --wait"
local cmd__inst__disable_firewall_optargs=""

local cmd__inst__enable_firewall_argtypes="tritoninstance"
local cmd__inst__enable_firewall_shortopts="-h -w"
local cmd__inst__enable_firewall_longopts="--help --wait"
local cmd__inst__enable_firewall_optargs=""

local cmd__inst__fwrule_shortopts="-h"
local cmd__inst__fwrule_longopts="--help"
local cmd__inst__fwrule_optargs=""
local cmd__inst__fwrule_subcmds="help list"
local cmd__inst__fwrule_allsubcmds="help list"

local cmd__inst__fwrule__help_shortopts=""
local cmd__inst__fwrule__help_longopts=""
local cmd__inst__fwrule__help_optargs=""

local cmd__inst__fwrule__list_argtypes="tritoninstance none"
local cmd__inst__fwrule__list_shortopts="-H -h -j -l -o -s"
local cmd__inst__fwrule__list_longopts="--help --json --long"
local cmd__inst__fwrule__list_optargs="-o=string -s=string"

local cmd__inst__fwrules_argtypes="tritoninstance none"
local cmd__inst__fwrules_shortopts="-H -h -j -l -o -s"
local cmd__inst__fwrules_longopts="--help --json --long"
local cmd__inst__fwrules_optargs="-o=string -s=string"

local cmd__inst__get_argtypes="tritoninstance none"
local cmd__inst__get_shortopts="-h -j"
local cmd__inst__get_longopts="--help --json"
local cmd__inst__get_optargs=""

local cmd__inst__help_shortopts=""
local cmd__inst__help_longopts=""
local cmd__inst__help_optargs=""

local cmd__inst__ip_argtypes="tritoninstance none"
local cmd__inst__ip_shortopts="-h"
local cmd__inst__ip_longopts="--help"
local cmd__inst__ip_optargs=""

local cmd__inst__list_shortopts="-H -h -j -l -o -s"
local cmd__inst__list_longopts="--credentials --help --json --long"
local cmd__inst__list_optargs="-o=string -s=string"

local cmd__inst__ls_shortopts="-H -h -j -l -o -s"
local cmd__inst__ls_longopts="--credentials --help --json --long"
local cmd__inst__ls_optargs="-o=string -s=string"

local cmd__inst__reboot_argtypes="tritoninstance"
local cmd__inst__reboot_shortopts="-h -w"
local cmd__inst__reboot_longopts="--help --wait --wait-timeout"
local cmd__inst__reboot_optargs="--wait-timeout=positiveInteger"

local cmd__inst__rename_argtypes="tritoninstance none"
local cmd__inst__rename_shortopts="-h -w"
local cmd__inst__rename_longopts="--help --wait --wait-timeout"
local cmd__inst__rename_optargs="--wait-timeout=positiveInteger"

local cmd__inst__resize_argtypes="tritoninstance tritonpackage none"
local cmd__inst__resize_shortopts="-h -w"
local cmd__inst__resize_longopts="--help --wait --wait-timeout"
local cmd__inst__resize_optargs="--wait-timeout=positiveInteger"

local cmd__inst__rm_argtypes="tritoninstance"
local cmd__inst__rm_shortopts="-h -w"
local cmd__inst__rm_longopts="--help --wait"
local cmd__inst__rm_optargs=""

local cmd__inst__snapshot_shortopts="-h"
local cmd__inst__snapshot_longopts="--help"
local cmd__inst__snapshot_optargs=""
local cmd__inst__snapshot_subcmds="create delete get help list ls rm"
local cmd__inst__snapshot_allsubcmds="create delete get help list ls rm"

local cmd__inst__snapshot__create_argtypes="tritoninstance none"
local cmd__inst__snapshot__create_shortopts="-h -j -n -w"
local cmd__inst__snapshot__create_longopts="--help --json --name --wait"
local cmd__inst__snapshot__create_optargs="--name=string -n=string"

local cmd__inst__snapshot__delete_argtypes="tritoninstance none"
local cmd__inst__snapshot__delete_shortopts="-f -h -w"
local cmd__inst__snapshot__delete_longopts="--force --help --wait"
local cmd__inst__snapshot__delete_optargs=""

local cmd__inst__snapshot__get_argtypes="tritoninstance none"
local cmd__inst__snapshot__get_shortopts="-h -j"
local cmd__inst__snapshot__get_longopts="--help --json"
local cmd__inst__snapshot__get_optargs=""

local cmd__inst__snapshot__help_shortopts=""
local cmd__inst__snapshot__help_longopts=""
local cmd__inst__snapshot__help_optargs=""

local cmd__inst__snapshot__list_argtypes="tritoninstance none"
local cmd__inst__snapshot__list_shortopts="-H -h -j -l -o -s"
local cmd__inst__snapshot__list_longopts="--help --json --long"
local cmd__inst__snapshot__list_optargs="-o=string -s=string"

local cmd__inst__snapshot__ls_argtypes="tritoninstance none"
local cmd__inst__snapshot__ls_shortopts="-H -h -j -l -o -s"
local cmd__inst__snapshot__ls_longopts="--help --json --long"
local cmd__inst__snapshot__ls_optargs="-o=string -s=string"

local cmd__inst__snapshot__rm_argtypes="tritoninstance none"
local cmd__inst__snapshot__rm_shortopts="-f -h -w"
local cmd__inst__snapshot__rm_longopts="--force --help --wait"
local cmd__inst__snapshot__rm_optargs=""

local cmd__inst__snapshots_argtypes="tritoninstance none"
local cmd__inst__snapshots_shortopts="-H -h -j -l -o -s"
local cmd__inst__snapshots_longopts="--help --json --long"
local cmd__inst__snapshots_optargs="-o=string -s=string"

local cmd__inst__ssh_argtypes="tritoninstance file"
local cmd__inst__ssh_shortopts="-h"
local cmd__inst__ssh_longopts="--help"
local cmd__inst__ssh_optargs=""

local cmd__inst__start_argtypes="tritoninstance"
local cmd__inst__start_shortopts="-h -w"
local cmd__inst__start_longopts="--help --snapshot --wait"
local cmd__inst__start_optargs="--snapshot=string"

local cmd__inst__stop_argtypes="tritoninstance"
local cmd__inst__stop_shortopts="-h -w"
local cmd__inst__stop_longopts="--help --wait"
local cmd__inst__stop_optargs=""

local cmd__inst__tag_shortopts="-h"
local cmd__inst__tag_longopts="--help"
local cmd__inst__tag_optargs=""
local cmd__inst__tag_subcmds="delete get help list ls replace-all rm set"
local cmd__inst__tag_allsubcmds="delete get help list ls replace-all rm set"

local cmd__inst__tag__delete_argtypes="tritoninstance none"
local cmd__inst__tag__delete_shortopts="-a -h -w"
local cmd__inst__tag__delete_longopts="--all --help --wait --wait-timeout"
local cmd__inst__tag__delete_optargs="--wait-timeout=positiveInteger"

local cmd__inst__tag__get_argtypes="tritoninstance none"
local cmd__inst__tag__get_shortopts="-h -j"
local cmd__inst__tag__get_longopts="--help --json"
local cmd__inst__tag__get_optargs=""

local cmd__inst__tag__help_shortopts=""
local cmd__inst__tag__help_longopts=""
local cmd__inst__tag__help_optargs=""

local cmd__inst__tag__list_argtypes="tritoninstance none"
local cmd__inst__tag__list_shortopts="-h -j"
local cmd__inst__tag__list_longopts="--help --json"
local cmd__inst__tag__list_optargs=""

local cmd__inst__tag__ls_argtypes="tritoninstance none"
local cmd__inst__tag__ls_shortopts="-h -j"
local cmd__inst__tag__ls_longopts="--help --json"
local cmd__inst__tag__ls_optargs=""

local cmd__inst__tag__replace_all_argtypes="tritoninstance file"
local cmd__inst__tag__replace_all_shortopts="-f -h -j -q -w"
local cmd__inst__tag__replace_all_longopts="--file --help --json --quiet --wait --wait-timeout"
local cmd__inst__tag__replace_all_optargs="--file=arrayOfString --wait-timeout=positiveInteger -f=arrayOfString"

local cmd__inst__tag__rm_argtypes="tritoninstance none"
local cmd__inst__tag__rm_shortopts="-a -h -w"
local cmd__inst__tag__rm_longopts="--all --help --wait --wait-timeout"
local cmd__inst__tag__rm_optargs="--wait-timeout=positiveInteger"

local cmd__inst__tag__set_argtypes="tritoninstance file"
local cmd__inst__tag__set_shortopts="-f -h -j -q -w"
local cmd__inst__tag__set_longopts="--file --help --json --quiet --wait --wait-timeout"
local cmd__inst__tag__set_optargs="--file=arrayOfString --wait-timeout=positiveInteger -f=arrayOfString"

local cmd__inst__tags_argtypes="tritoninstance none"
local cmd__inst__tags_shortopts="-h -j"
local cmd__inst__tags_longopts="--help --json"
local cmd__inst__tags_optargs=""

local cmd__inst__wait_argtypes="tritoninstance"
local cmd__inst__wait_shortopts="-h -s"
local cmd__inst__wait_longopts="--help --states"
local cmd__inst__wait_optargs="--states=arrayOfString -s=arrayOfString"

local cmd__instance_shortopts="-h"
local cmd__instance_longopts="--help"
local cmd__instance_optargs=""
local cmd__instance_subcmds="audit create delete disable-firewall enable-firewall fwrules get help ip list ls reboot rename resize rm snapshot ssh start stop tag wait"
local cmd__instance_allsubcmds="audit create delete disable-firewall enable-firewall fwrule fwrules get help ip list ls reboot rename resize rm snapshot snapshots ssh start stop tag tags wait"

local cmd__instance__audit_argtypes="tritoninstance none"
local cmd__instance__audit_shortopts="-H -h -j -l -o -s"
local cmd__instance__audit_longopts="--help --json --long"
local cmd__instance__audit_optargs="-o=string -s=string"

local cmd__instance__create_argtypes="tritonimage tritonpackage none"
local cmd__instance__create_shortopts="-M -N -a -h -j -m -n -t -w"
local cmd__instance__create_longopts="--affinity --brand --dry-run --firewall --help --json --metadata --metadata-file --name --network --script --tag --wait"
local cmd__instance__create_optargs="--affinity=tritonaffinityrule --brand=string --metadata-file=arrayOfString --metadata=arrayOfString --name=string --network=tritonnetwork --script=arrayOfString --tag=arrayOfString --volume=arrayOfString -M=arrayOfString -N=tritonnetwork -a=tritonaffinityrule -m=arrayOfString -n=string -t=arrayOfString -v=arrayOfString"

local cmd__instance__delete_argtypes="tritoninstance"
local cmd__instance__delete_shortopts="-h -w"
local cmd__instance__delete_longopts="--help --wait"
local cmd__instance__delete_optargs=""

local cmd__instance__disable_firewall_argtypes="tritoninstance"
local cmd__instance__disable_firewall_shortopts="-h -w"
local cmd__instance__disable_firewall_longopts="--help --wait"
local cmd__instance__disable_firewall_optargs=""

local cmd__instance__enable_firewall_argtypes="tritoninstance"
local cmd__instance__enable_firewall_shortopts="-h -w"
local cmd__instance__enable_firewall_longopts="--help --wait"
local cmd__instance__enable_firewall_optargs=""

local cmd__instance__fwrule_shortopts="-h"
local cmd__instance__fwrule_longopts="--help"
local cmd__instance__fwrule_optargs=""
local cmd__instance__fwrule_subcmds="help list"
local cmd__instance__fwrule_allsubcmds="help list"

local cmd__instance__fwrule__help_shortopts=""
local cmd__instance__fwrule__help_longopts=""
local cmd__instance__fwrule__help_optargs=""

local cmd__instance__fwrule__list_argtypes="tritoninstance none"
local cmd__instance__fwrule__list_shortopts="-H -h -j -l -o -s"
local cmd__instance__fwrule__list_longopts="--help --json --long"
local cmd__instance__fwrule__list_optargs="-o=string -s=string"

local cmd__instance__fwrules_argtypes="tritoninstance none"
local cmd__instance__fwrules_shortopts="-H -h -j -l -o -s"
local cmd__instance__fwrules_longopts="--help --json --long"
local cmd__instance__fwrules_optargs="-o=string -s=string"

local cmd__instance__get_argtypes="tritoninstance none"
local cmd__instance__get_shortopts="-h -j"
local cmd__instance__get_longopts="--help --json"
local cmd__instance__get_optargs=""

local cmd__instance__help_shortopts=""
local cmd__instance__help_longopts=""
local cmd__instance__help_optargs=""

local cmd__instance__ip_argtypes="tritoninstance none"
local cmd__instance__ip_shortopts="-h"
local cmd__instance__ip_longopts="--help"
local cmd__instance__ip_optargs=""

local cmd__instance__list_shortopts="-H -h -j -l -o -s"
local cmd__instance__list_longopts="--credentials --help --json --long"
local cmd__instance__list_optargs="-o=string -s=string"

local cmd__instance__ls_shortopts="-H -h -j -l -o -s"
local cmd__instance__ls_longopts="--credentials --help --json --long"
local cmd__instance__ls_optargs="-o=string -s=string"

local cmd__instance__reboot_argtypes="tritoninstance"
local cmd__instance__reboot_shortopts="-h -w"
local cmd__instance__reboot_longopts="--help --wait --wait-timeout"
local cmd__instance__reboot_optargs="--wait-timeout=positiveInteger"

local cmd__instance__rename_argtypes="tritoninstance none"
local cmd__instance__rename_shortopts="-h -w"
local cmd__instance__rename_longopts="--help --wait --wait-timeout"
local cmd__instance__rename_optargs="--wait-timeout=positiveInteger"

local cmd__instance__resize_argtypes="tritoninstance tritonpackage none"
local cmd__instance__resize_shortopts="-h -w"
local cmd__instance__resize_longopts="--help --wait --wait-timeout"
local cmd__instance__resize_optargs="--wait-timeout=positiveInteger"

local cmd__instance__rm_argtypes="tritoninstance"
local cmd__instance__rm_shortopts="-h -w"
local cmd__instance__rm_longopts="--help --wait"
local cmd__instance__rm_optargs=""

local cmd__instance__snapshot_shortopts="-h"
local cmd__instance__snapshot_longopts="--help"
local cmd__instance__snapshot_optargs=""
local cmd__instance__snapshot_subcmds="create delete get help list ls rm"
local cmd__instance__snapshot_allsubcmds="create delete get help list ls rm"

local cmd__instance__snapshot__create_argtypes="tritoninstance none"
local cmd__instance__snapshot__create_shortopts="-h -j -n -w"
local cmd__instance__snapshot__create_longopts="--help --json --name --wait"
local cmd__instance__snapshot__create_optargs="--name=string -n=string"

local cmd__instance__snapshot__delete_argtypes="tritoninstance none"
local cmd__instance__snapshot__delete_shortopts="-f -h -w"
local cmd__instance__snapshot__delete_longopts="--force --help --wait"
local cmd__instance__snapshot__delete_optargs=""

local cmd__instance__snapshot__get_argtypes="tritoninstance none"
local cmd__instance__snapshot__get_shortopts="-h -j"
local cmd__instance__snapshot__get_longopts="--help --json"
local cmd__instance__snapshot__get_optargs=""

local cmd__instance__snapshot__help_shortopts=""
local cmd__instance__snapshot__help_longopts=""
local cmd__instance__snapshot__help_optargs=""

local cmd__instance__snapshot__list_argtypes="tritoninstance none"
local cmd__instance__snapshot__list_shortopts="-H -h -j -l -o -s"
local cmd__instance__snapshot__list_longopts="--help --json --long"
local cmd__instance__snapshot__list_optargs="-o=string -s=string"

local cmd__instance__snapshot__ls_argtypes="tritoninstance none"
local cmd__instance__snapshot__ls_shortopts="-H -h -j -l -o -s"
local cmd__instance__snapshot__ls_longopts="--help --json --long"
local cmd__instance__snapshot__ls_optargs="-o=string -s=string"

local cmd__instance__snapshot__rm_argtypes="tritoninstance none"
local cmd__instance__snapshot__rm_shortopts="-f -h -w"
local cmd__instance__snapshot__rm_longopts="--force --help --wait"
local cmd__instance__snapshot__rm_optargs=""

local cmd__instance__snapshots_argtypes="tritoninstance none"
local cmd__instance__snapshots_shortopts="-H -h -j -l -o -s"
local cmd__instance__snapshots_longopts="--help --json --long"
local cmd__instance__snapshots_optargs="-o=string -s=string"

local cmd__instance__ssh_argtypes="tritoninstance file"
local cmd__instance__ssh_shortopts="-h"
local cmd__instance__ssh_longopts="--help"
local cmd__instance__ssh_optargs=""

local cmd__instance__start_argtypes="tritoninstance"
local cmd__instance__start_shortopts="-h -w"
local cmd__instance__start_longopts="--help --snapshot --wait"
local cmd__instance__start_optargs="--snapshot=string"

local cmd__instance__stop_argtypes="tritoninstance"
local cmd__instance__stop_shortopts="-h -w"
local cmd__instance__stop_longopts="--help --wait"
local cmd__instance__stop_optargs=""

local cmd__instance__tag_shortopts="-h"
local cmd__instance__tag_longopts="--help"
local cmd__instance__tag_optargs=""
local cmd__instance__tag_subcmds="delete get help list ls replace-all rm set"
local cmd__instance__tag_allsubcmds="delete get help list ls replace-all rm set"

local cmd__instance__tag__delete_argtypes="tritoninstance none"
local cmd__instance__tag__delete_shortopts="-a -h -w"
local cmd__instance__tag__delete_longopts="--all --help --wait --wait-timeout"
local cmd__instance__tag__delete_optargs="--wait-timeout=positiveInteger"

local cmd__instance__tag__get_argtypes="tritoninstance none"
local cmd__instance__tag__get_shortopts="-h -j"
local cmd__instance__tag__get_longopts="--help --json"
local cmd__instance__tag__get_optargs=""

local cmd__instance__tag__help_shortopts=""
local cmd__instance__tag__help_longopts=""
local cmd__instance__tag__help_optargs=""

local cmd__instance__tag__list_argtypes="tritoninstance none"
local cmd__instance__tag__list_shortopts="-h -j"
local cmd__instance__tag__list_longopts="--help --json"
local cmd__instance__tag__list_optargs=""

local cmd__instance__tag__ls_argtypes="tritoninstance none"
local cmd__instance__tag__ls_shortopts="-h -j"
local cmd__instance__tag__ls_longopts="--help --json"
local cmd__instance__tag__ls_optargs=""

local cmd__instance__tag__replace_all_argtypes="tritoninstance file"
local cmd__instance__tag__replace_all_shortopts="-f -h -j -q -w"
local cmd__instance__tag__replace_all_longopts="--file --help --json --quiet --wait --wait-timeout"
local cmd__instance__tag__replace_all_optargs="--file=arrayOfString --wait-timeout=positiveInteger -f=arrayOfString"

local cmd__instance__tag__rm_argtypes="tritoninstance none"
local cmd__instance__tag__rm_shortopts="-a -h -w"
local cmd__instance__tag__rm_longopts="--all --help --wait --wait-timeout"
local cmd__instance__tag__rm_optargs="--wait-timeout=positiveInteger"

local cmd__instance__tag__set_argtypes="tritoninstance file"
local cmd__instance__tag__set_shortopts="-f -h -j -q -w"
local cmd__instance__tag__set_longopts="--file --help --json --quiet --wait --wait-timeout"
local cmd__instance__tag__set_optargs="--file=arrayOfString --wait-timeout=positiveInteger -f=arrayOfString"

local cmd__instance__tags_argtypes="tritoninstance none"
local cmd__instance__tags_shortopts="-h -j"
local cmd__instance__tags_longopts="--help --json"
local cmd__instance__tags_optargs=""

local cmd__instance__wait_argtypes="tritoninstance"
local cmd__instance__wait_shortopts="-h -s"
local cmd__instance__wait_longopts="--help --states"
local cmd__instance__wait_optargs="--states=arrayOfString -s=arrayOfString"

local cmd__instances_shortopts="-H -h -j -l -o -s"
local cmd__instances_longopts="--credentials --help --json --long"
local cmd__instances_optargs="-o=string -s=string"

local cmd__insts_shortopts="-H -h -j -l -o -s"
local cmd__insts_longopts="--credentials --help --json --long"
local cmd__insts_optargs="-o=string -s=string"

local cmd__ip_argtypes="tritoninstance none"
local cmd__ip_shortopts="-h"
local cmd__ip_longopts="--help"
local cmd__ip_optargs=""

local cmd__key_shortopts="-h"
local cmd__key_longopts="--help"
local cmd__key_optargs=""
local cmd__key_subcmds="add delete get help list ls rm"
local cmd__key_allsubcmds="add delete get help list ls rm"

local cmd__key__add_shortopts="-h -j -n"
local cmd__key__add_longopts="--help --json --name"
local cmd__key__add_optargs="--name=string -n=string"

local cmd__key__delete_argtypes="tritonkey"
local cmd__key__delete_shortopts="-h -j -y"
local cmd__key__delete_longopts="--help --json --yes"
local cmd__key__delete_optargs=""

local cmd__key__get_argtypes="tritonkey none"
local cmd__key__get_shortopts="-h -j"
local cmd__key__get_longopts="--help --json"
local cmd__key__get_optargs=""

local cmd__key__help_shortopts=""
local cmd__key__help_longopts=""
local cmd__key__help_optargs=""

local cmd__key__list_shortopts="-A -H -h -j -l -o -s"
local cmd__key__list_longopts="--authorized-keys --help --json --long"
local cmd__key__list_optargs="-o=string -s=string"

local cmd__key__ls_shortopts="-A -H -h -j -l -o -s"
local cmd__key__ls_longopts="--authorized-keys --help --json --long"
local cmd__key__ls_optargs="-o=string -s=string"

local cmd__key__rm_argtypes="tritonkey"
local cmd__key__rm_shortopts="-h -j -y"
local cmd__key__rm_longopts="--help --json --yes"
local cmd__key__rm_optargs=""

local cmd__keys_shortopts="-A -H -h -j -l -o -s"
local cmd__keys_longopts="--authorized-keys --help --json --long"
local cmd__keys_optargs="-o=string -s=string"

local cmd__ls_shortopts="-H -h -j -l -o -s"
local cmd__ls_longopts="--credentials --help --json --long"
local cmd__ls_optargs="-o=string -s=string"

local cmd__network_shortopts="-h"
local cmd__network_longopts="--help"
local cmd__network_optargs=""
local cmd__network_subcmds="get help ip list ls"
local cmd__network_allsubcmds="get help ip list ls"

local cmd__network__get_argtypes="tritonnetwork none"
local cmd__network__get_shortopts="-h -j"
local cmd__network__get_longopts="--help --json"
local cmd__network__get_optargs=""

local cmd__network__help_shortopts=""
local cmd__network__help_longopts=""
local cmd__network__help_optargs=""

local cmd__network__ip_shortopts="-h"
local cmd__network__ip_longopts="--help"
local cmd__network__ip_optargs=""
local cmd__network__ip_subcmds="get help list ls update"
local cmd__network__ip_allsubcmds="get help list ls update"

local cmd__network__ip__get_argtypes="tritonnetwork tritonnetworkip none"
local cmd__network__ip__get_shortopts="-h -j"
local cmd__network__ip__get_longopts="--help --json"
local cmd__network__ip__get_optargs=""

local cmd__network__ip__help_shortopts=""
local cmd__network__ip__help_longopts=""
local cmd__network__ip__help_optargs=""

local cmd__network__ip__list_argtypes="tritonnetwork none"
local cmd__network__ip__list_shortopts="-H -h -j -l -o -s"
local cmd__network__ip__list_longopts="--help --json --long"
local cmd__network__ip__list_optargs="-o=string -s=string"

local cmd__network__ip__ls_argtypes="tritonnetwork none"
local cmd__network__ip__ls_shortopts="-H -h -j -l -o -s"
local cmd__network__ip__ls_longopts="--help --json --long"
local cmd__network__ip__ls_optargs="-o=string -s=string"

local cmd__network__ip__update_argtypes="tritonnetwork tritonnetworkip tritonupdatenetworkipfield"
local cmd__network__ip__update_shortopts="-f -h -j"
local cmd__network__ip__update_longopts="--file --help --json"
local cmd__network__ip__update_optargs="--file=string -f=string"

local cmd__network__list_shortopts="-H -h -j -l -o -s"
local cmd__network__list_longopts="--help --json --long"
local cmd__network__list_optargs="-o=string -s=string"

local cmd__network__ls_shortopts="-H -h -j -l -o -s"
local cmd__network__ls_longopts="--help --json --long"
local cmd__network__ls_optargs="-o=string -s=string"

local cmd__networks_shortopts="-H -h -j -l -o -s"
local cmd__networks_longopts="--help --json --long"
local cmd__networks_optargs="-o=string -s=string"

local cmd__package_shortopts="-h"
local cmd__package_longopts="--help"
local cmd__package_optargs=""
local cmd__package_subcmds="get help list ls"
local cmd__package_allsubcmds="get help list ls"

local cmd__package__get_argtypes="tritonpackage none"
local cmd__package__get_shortopts="-h -j"
local cmd__package__get_longopts="--help --json"
local cmd__package__get_optargs=""

local cmd__package__help_shortopts=""
local cmd__package__help_longopts=""
local cmd__package__help_optargs=""

local cmd__package__list_shortopts="-H -h -j -l -o -p -s"
local cmd__package__list_longopts="--help --json --long"
local cmd__package__list_optargs="-o=string -s=string"

local cmd__package__ls_shortopts="-H -h -j -l -o -p -s"
local cmd__package__ls_longopts="--help --json --long"
local cmd__package__ls_optargs="-o=string -s=string"

local cmd__packages_shortopts="-H -h -j -l -o -p -s"
local cmd__packages_longopts="--help --json --long"
local cmd__packages_optargs="-o=string -s=string"

local cmd__pkg_shortopts="-h"
local cmd__pkg_longopts="--help"
local cmd__pkg_optargs=""
local cmd__pkg_subcmds="get help list ls"
local cmd__pkg_allsubcmds="get help list ls"

local cmd__pkg__get_argtypes="tritonpackage none"
local cmd__pkg__get_shortopts="-h -j"
local cmd__pkg__get_longopts="--help --json"
local cmd__pkg__get_optargs=""

local cmd__pkg__help_shortopts=""
local cmd__pkg__help_longopts=""
local cmd__pkg__help_optargs=""

local cmd__pkg__list_shortopts="-H -h -j -l -o -p -s"
local cmd__pkg__list_longopts="--help --json --long"
local cmd__pkg__list_optargs="-o=string -s=string"

local cmd__pkg__ls_shortopts="-H -h -j -l -o -p -s"
local cmd__pkg__ls_longopts="--help --json --long"
local cmd__pkg__ls_optargs="-o=string -s=string"

local cmd__pkgs_shortopts="-H -h -j -l -o -p -s"
local cmd__pkgs_longopts="--help --json --long"
local cmd__pkgs_optargs="-o=string -s=string"

local cmd__profile_shortopts="-h"
local cmd__profile_longopts="--help"
local cmd__profile_optargs=""
local cmd__profile_subcmds="create delete docker-setup edit get help list ls rm set set-current"
local cmd__profile_allsubcmds="create delete docker-setup edit get help list ls rm set set-current"

local cmd__profile__create_shortopts="-f -h -y"
local cmd__profile__create_longopts="--copy --file --help --no-docker --yes"
local cmd__profile__create_optargs="--copy=tritonprofile --file=string -f=string"

local cmd__profile__delete_argtypes="tritonprofile none"
local cmd__profile__delete_shortopts="-f -h"
local cmd__profile__delete_longopts="--force --help"
local cmd__profile__delete_optargs=""

local cmd__profile__docker_setup_argtypes="tritonprofile none"
local cmd__profile__docker_setup_shortopts="-h -y"
local cmd__profile__docker_setup_longopts="--help --yes"
local cmd__profile__docker_setup_optargs=""

local cmd__profile__edit_argtypes="tritonprofile none"
local cmd__profile__edit_shortopts="-h"
local cmd__profile__edit_longopts="--help"
local cmd__profile__edit_optargs=""

local cmd__profile__get_argtypes="tritonprofile none"
local cmd__profile__get_shortopts="-h -j"
local cmd__profile__get_longopts="--help --json"
local cmd__profile__get_optargs=""

local cmd__profile__help_shortopts=""
local cmd__profile__help_longopts=""
local cmd__profile__help_optargs=""

local cmd__profile__list_shortopts="-H -h -j -l -o -s"
local cmd__profile__list_longopts="--help --json --long"
local cmd__profile__list_optargs="-o=string -s=string"

local cmd__profile__ls_shortopts="-H -h -j -l -o -s"
local cmd__profile__ls_longopts="--help --json --long"
local cmd__profile__ls_optargs="-o=string -s=string"

local cmd__profile__rm_argtypes="tritonprofile none"
local cmd__profile__rm_shortopts="-f -h"
local cmd__profile__rm_longopts="--force --help"
local cmd__profile__rm_optargs=""

local cmd__profile__set_argtypes="tritonprofile none"
local cmd__profile__set_shortopts="-h"
local cmd__profile__set_longopts="--help"
local cmd__profile__set_optargs=""

local cmd__profile__set_current_argtypes="tritonprofile none"
local cmd__profile__set_current_shortopts="-h"
local cmd__profile__set_current_longopts="--help"
local cmd__profile__set_current_optargs=""

local cmd__profiles_shortopts="-H -h -j -l -o -s"
local cmd__profiles_longopts="--help --json --long"
local cmd__profiles_optargs="-o=string -s=string"

local cmd__rbac_shortopts="-h"
local cmd__rbac_longopts="--help"
local cmd__rbac_optargs=""
local cmd__rbac_subcmds="apply help image-role-tags info instance-role-tags key keys network-role-tags package-role-tags policies policy role role-tags roles user users"
local cmd__rbac_allsubcmds="apply help image-role-tags info instance-role-tags key keys network-role-tags package-role-tags policies policy reset role role-tags roles user users"

local cmd__rbac__apply_shortopts="-f -h -n -y"
local cmd__rbac__apply_longopts="--dev-create-keys-and-profiles --dry-run --file --help --yes"
local cmd__rbac__apply_optargs="--file=string -f=string"

local cmd__rbac__help_shortopts=""
local cmd__rbac__help_longopts=""
local cmd__rbac__help_optargs=""

local cmd__rbac__image_role_tags_shortopts="-D -a -d -e -h -j -s -y"
local cmd__rbac__image_role_tags_longopts="--add --delete --delete-all --edit --help --json --set --yes"
local cmd__rbac__image_role_tags_optargs="--add=arrayOfString --delete=arrayOfString --set=arrayOfString -a=arrayOfString -d=arrayOfString -s=arrayOfString"

local cmd__rbac__info_shortopts="-a -h"
local cmd__rbac__info_longopts="--all --help --no-color"
local cmd__rbac__info_optargs=""

local cmd__rbac__instance_role_tags_shortopts="-D -a -d -e -h -j -s -y"
local cmd__rbac__instance_role_tags_longopts="--add --delete --delete-all --edit --help --json --set --yes"
local cmd__rbac__instance_role_tags_optargs="--add=arrayOfString --delete=arrayOfString --set=arrayOfString -a=arrayOfString -d=arrayOfString -s=arrayOfString"

local cmd__rbac__key_shortopts="-a -d -h -j -n -y"
local cmd__rbac__key_longopts="--add --delete --help --json --name --yes"
local cmd__rbac__key_optargs="--name=string -n=string"

local cmd__rbac__keys_shortopts="-A -H -h -j -l -o -s"
local cmd__rbac__keys_longopts="--authorized-keys --help --json --long"
local cmd__rbac__keys_optargs="-o=string -s=string"

local cmd__rbac__network_role_tags_shortopts="-D -a -d -e -h -j -s -y"
local cmd__rbac__network_role_tags_longopts="--add --delete --delete-all --edit --help --json --set --yes"
local cmd__rbac__network_role_tags_optargs="--add=arrayOfString --delete=arrayOfString --set=arrayOfString -a=arrayOfString -d=arrayOfString -s=arrayOfString"

local cmd__rbac__package_role_tags_shortopts="-D -a -d -e -h -j -s -y"
local cmd__rbac__package_role_tags_longopts="--add --delete --delete-all --edit --help --json --set --yes"
local cmd__rbac__package_role_tags_optargs="--add=arrayOfString --delete=arrayOfString --set=arrayOfString -a=arrayOfString -d=arrayOfString -s=arrayOfString"

local cmd__rbac__policies_shortopts="-H -h -j -l -o -s"
local cmd__rbac__policies_longopts="--help --json --long"
local cmd__rbac__policies_optargs="-o=string -s=string"

local cmd__rbac__policy_shortopts="-a -d -e -h -j -y"
local cmd__rbac__policy_longopts="--add --delete --edit --help --json --yes"
local cmd__rbac__policy_optargs=""

local cmd__rbac__reset_shortopts="-h -n -y"
local cmd__rbac__reset_longopts="--dry-run --help --yes"
local cmd__rbac__reset_optargs=""

local cmd__rbac__role_shortopts="-a -d -e -h -j -y"
local cmd__rbac__role_longopts="--add --delete --edit --help --json --yes"
local cmd__rbac__role_optargs=""

local cmd__rbac__role_tags_shortopts="-D -a -d -e -h -j -s -y"
local cmd__rbac__role_tags_longopts="--add --delete --delete-all --edit --help --json --set --yes"
local cmd__rbac__role_tags_optargs="--add=arrayOfString --delete=arrayOfString --set=arrayOfString -a=arrayOfString -d=arrayOfString -s=arrayOfString"

local cmd__rbac__roles_shortopts="-H -h -j -l -o -s"
local cmd__rbac__roles_longopts="--help --json --long"
local cmd__rbac__roles_optargs="-o=string -s=string"

local cmd__rbac__user_shortopts="-a -d -e -h -j -k -r -y"
local cmd__rbac__user_longopts="--add --delete --edit --help --json --keys --roles --yes"
local cmd__rbac__user_optargs=""

local cmd__rbac__users_shortopts="-H -h -j -l -o -s"
local cmd__rbac__users_longopts="--help --json --long"
local cmd__rbac__users_optargs="-o=string -s=string"

local cmd__reboot_argtypes="tritoninstance"
local cmd__reboot_shortopts="-h -w"
local cmd__reboot_longopts="--help --wait --wait-timeout"
local cmd__reboot_optargs="--wait-timeout=positiveInteger"

local cmd__rm_argtypes="tritoninstance"
local cmd__rm_shortopts="-h -w"
local cmd__rm_longopts="--help --wait"
local cmd__rm_optargs=""

local cmd__services_shortopts="-H -h -j -o -s"
local cmd__services_longopts="--help --json"
local cmd__services_optargs="-o=string -s=string"

local cmd__ssh_argtypes="tritoninstance file"
local cmd__ssh_shortopts="-h"
local cmd__ssh_longopts="--help"
local cmd__ssh_optargs=""

local cmd__start_argtypes="tritoninstance"
local cmd__start_shortopts="-h -w"
local cmd__start_longopts="--help --snapshot --wait"
local cmd__start_optargs="--snapshot=string"

local cmd__stop_argtypes="tritoninstance"
local cmd__stop_shortopts="-h -w"
local cmd__stop_longopts="--help --wait"
local cmd__stop_optargs=""

local cmd__vol_shortopts="-h"
local cmd__vol_longopts="--help"
local cmd__vol_optargs=""
local cmd__vol_subcmds="create delete get help list ls rm sizes"
local cmd__vol_allsubcmds="create delete get help list ls rm sizes"

local cmd__vol__create_argtypes="tritonvolume none"
local cmd__vol__create_shortopts="-N -h -j -n -s -t -w"
local cmd__vol__create_longopts="--help --json --name --network --size --type --wait --wait-timeout"
local cmd__vol__create_optargs="--name=string --network=tritonnetwork --size=tritonvolumesize --type=string --wait-timeout=positiveInteger -N=tritonnetwork -n=string -s=tritonvolumesize -t=string"

local cmd__vol__delete_argtypes="tritonvolume"
local cmd__vol__delete_shortopts="-h -w -y"
local cmd__vol__delete_longopts="--help --wait --wait-timeout --yes"
local cmd__vol__delete_optargs="--wait-timeout=positiveInteger"

local cmd__vol__get_argtypes="tritonvolume none"
local cmd__vol__get_shortopts="-h -j"
local cmd__vol__get_longopts="--help --json"
local cmd__vol__get_optargs=""

local cmd__vol__help_shortopts=""
local cmd__vol__help_longopts=""
local cmd__vol__help_optargs=""

local cmd__vol__list_shortopts="-H -h -j -l -o -s"
local cmd__vol__list_longopts="--help --json --long"
local cmd__vol__list_optargs="-o=string -s=string"

local cmd__vol__ls_shortopts="-H -h -j -l -o -s"
local cmd__vol__ls_longopts="--help --json --long"
local cmd__vol__ls_optargs="-o=string -s=string"

local cmd__vol__rm_argtypes="tritonvolume"
local cmd__vol__rm_shortopts="-h -w -y"
local cmd__vol__rm_longopts="--help --wait --wait-timeout --yes"
local cmd__vol__rm_optargs="--wait-timeout=positiveInteger"

local cmd__vol__sizes_shortopts="-H -h -j -o -s"
local cmd__vol__sizes_longopts="--help --json"
local cmd__vol__sizes_optargs="-o=string -s=string"

local cmd__vols_shortopts="-H -h -j -l -o -s"
local cmd__vols_longopts="--help --json --long"
local cmd__vols_optargs="-o=string -s=string"

local cmd__volume_shortopts="-h"
local cmd__volume_longopts="--help"
local cmd__volume_optargs=""
local cmd__volume_subcmds="create delete get help list ls rm sizes"
local cmd__volume_allsubcmds="create delete get help list ls rm sizes"

local cmd__volume__create_argtypes="tritonvolume none"
local cmd__volume__create_shortopts="-N -h -j -n -s -t -w"
local cmd__volume__create_longopts="--help --json --name --network --size --type --wait --wait-timeout"
local cmd__volume__create_optargs="--name=string --network=tritonnetwork --size=tritonvolumesize --type=string --wait-timeout=positiveInteger -N=tritonnetwork -n=string -s=tritonvolumesize -t=string"

local cmd__volume__delete_argtypes="tritonvolume"
local cmd__volume__delete_shortopts="-h -w -y"
local cmd__volume__delete_longopts="--help --wait --wait-timeout --yes"
local cmd__volume__delete_optargs="--wait-timeout=positiveInteger"

local cmd__volume__get_argtypes="tritonvolume none"
local cmd__volume__get_shortopts="-h -j"
local cmd__volume__get_longopts="--help --json"
local cmd__volume__get_optargs=""

local cmd__volume__help_shortopts=""
local cmd__volume__help_longopts=""
local cmd__volume__help_optargs=""

local cmd__volume__list_shortopts="-H -h -j -l -o -s"
local cmd__volume__list_longopts="--help --json --long"
local cmd__volume__list_optargs="-o=string -s=string"

local cmd__volume__ls_shortopts="-H -h -j -l -o -s"
local cmd__volume__ls_longopts="--help --json --long"
local cmd__volume__ls_optargs="-o=string -s=string"

local cmd__volume__rm_argtypes="tritonvolume"
local cmd__volume__rm_shortopts="-h -w -y"
local cmd__volume__rm_longopts="--help --wait --wait-timeout --yes"
local cmd__volume__rm_optargs="--wait-timeout=positiveInteger"

local cmd__volume__sizes_shortopts="-H -h -j -o -s"
local cmd__volume__sizes_longopts="--help --json"
local cmd__volume__sizes_optargs="-o=string -s=string"

local cmd__volumes_shortopts="-H -h -j -l -o -s"
local cmd__volumes_longopts="--help --json --long"
local cmd__volumes_optargs="-o=string -s=string"

# Functions for Bash completion of some 'triton' option/arg types.

function complete_tritonprofile {
    local word="$1"
    local candidates
    candidates=$(ls -1 ~/.triton/profiles.d/*.json 2>/dev/null \
        | sed -E 's/^.*\/([^\/]+)\.json$/\1/')
    compgen $compgen_opts -W "$candidates" -- "$word"
}


#
# Get completions for a given type of Triton (server-side) data.
#
# Usage:
#   _complete_tritondata $type    # e.g. _complete_tritondata images
#
# The easiest/slowest thing to do to complete images would be to just call:
#       triton [profile-related-args] images -Ho name
# or similar. Too slow.
#
# The next easiest would be this:
#       candidates=$(TRITON_COMPLETE=$type $COMP_LINE)
# where `triton` is setup to specially just handle completions if
# `TRITON_COMPLETE` is set. That special handling writes out a cache file to
# avoid hitting the server every time. This is still too slow because the
# node.js startup time for `triton` is too slow (around 1s on my laptop).
#
# The next choice is to (a) use the special `TRITON_COMPLETE` handling to
# fetch data from the server and write out a cache file, but (b) attempt to
# find and use that cache file without calling node.js code. The win is
# (at least in my usage) faster response time to a <TAB>. The cost is
# reproducing (imperfectly) in Bash the logic for determining the Triton profile
# info to find the cache.
#
function _complete_tritondata {
    local type=$1

    # First, find the Triton CLI profile.
    local profile
    profile=$(echo "$COMP_LINE" | grep -- '\s\+-p\s*\w\+\s\+' | sed -E 's/.* +-p *([^ ]+) +.*/\1/')
    if [[ -z "$profile" ]]; then
        profile=$TRITON_PROFILE
    fi
    if [[ -z "$profile" ]]; then
        profile=$(grep '"profile":' ~/.triton/config.json | cut -d'"' -f4)
    fi
    if [[ -z "$profile" ]]; then
        profile=env
    fi
    trace "    profile: $profile"

    # Then, determine the account and url that go into the cache dir.
    # TODO: include -a/-U options that change from profile values
    # TODO: subuser support
    local url
    local account
    local profileFile
    profileFile=$HOME/.triton/profiles.d/$profile.json
    if [[ "$profile" == "env" ]]; then
        url=$TRITON_URL
        if [[ -z "$url" ]]; then
            url=$SDC_URL
        fi
        account=$TRITON_ACCOUNT
        if [[ -z "$account" ]]; then
            account=$SDC_ACCOUNT
        fi
    elif [[ -f $profileFile ]]; then
        url=$(grep '"url":' $profileFile | cut -d'"' -f4)
        account=$(grep '"account":' $profileFile | cut -d'"' -f4)
    fi
    trace "    url: $url"
    trace "    account: $account"

    # Mimic node-triton/lib/common.js#profileSlug
    local profileSlug
    profileSlug="$(echo "$account" | sed -E 's/@/_/g')@$(echo "$url" | sed -E 's#^https?://##')"
    profileSlug="$(echo "$profileSlug" | sed -E 's/[^a-zA-Z0-9_@-]/_/g')"

    local cacheFile
    cacheFile="$HOME/.triton/cache/$profileSlug/$type.completions"
    trace "    cacheFile: $cacheFile"

    # If we have a cache file, remove it and regenerate if it is >5 minutes old.
    #
    # Dev Note: This 5min TTL should match what `lib/cli.js#_emitCompletions()`
    # is using.
    local candidates
    if [[ ! -f "$cacheFile" ]]; then
        candidates=$(TRITON_COMPLETE=$type $COMP_LINE)
    else
        local mtime
        mtime=$(stat -r "$cacheFile" | awk '{print $10}')
        local ttl=300  # 5 minutes in seconds
        local age
        age=$(echo "$(date +%s) - $mtime" | bc)
        if [[ $age -gt $ttl ]]; then
            # Out of date. Regenerate the cache file.
            trace "    cacheFile out-of-date (mtime=$mtime, age=$age, ttl=$ttl)"
            rm "$cacheFile"
            candidates=$(TRITON_COMPLETE=$type $COMP_LINE)
        else
            trace "    cacheFile is in-date (mtime=$mtime, age=$age, ttl=$ttl)"
            candidates=$(cat "$cacheFile")
        fi
    fi

    echo "$candidates"
}

function complete_tritonpackage {
    local word="$1"
    candidates=$(_complete_tritondata packages)
    compgen $compgen_opts -W "$candidates" -- "$word"
}

function complete_tritonimage {
    local word="$1"
    candidates=$(_complete_tritondata images)
    compgen $compgen_opts -W "$candidates" -- "$word"
}

function complete_tritoninstance {
    local word="$1"
    candidates=$(_complete_tritondata instances)
    compgen $compgen_opts -W "$candidates" -- "$word"
}

function complete_tritonnetwork {
    local word="$1"
    candidates=$(_complete_tritondata networks)
    compgen $compgen_opts -W "$candidates" -- "$word"
}

function complete_tritonvolume {
    local word="$1"
    candidates=$(_complete_tritondata volumes)
    compgen $compgen_opts -W "$candidates" -- "$word"
}

function complete_tritonfwrule {
    local word="$1"
    candidates=$(_complete_tritondata fwrules)
    compgen $compgen_opts -W "$candidates" -- "$word"
}

function complete_tritonkey {
    local word="$1"
    candidates=$(_complete_tritondata keys)
    compgen $compgen_opts -W "$candidates" -- "$word"
}

function complete_tritonaffinityrule {
    local word="$1"
    candidates=$(_complete_tritondata affinityrules)

    # Triton affinity rules typically have '=' in them, e.g.:
    #       triton create -a inst==db0 ...
    # This means we run afoul of the '=' in COMP_WORDBREAKS which results in
    #       triton create -a inst=<TAB>
    # leading to:
    #       triton create -a inst=inst==
    # The answer is to strip off at the last '=' in the returned completions.
    if [[ "$word" == *"="* ]]; then
        local uptolastequal
        uptolastequal="${word%=*}="
        compgen $compgen_opts -W "$candidates" -- "$word" \
            | cut -c$(( ${#uptolastequal} + 1 ))-
    else
        compgen $compgen_opts -W "$candidates" -- "$word"
    fi

}


function complete_tritonupdateaccountfield {
    local word="$1"
    local candidates
    candidates="address= city= companyName= country= email= firstName= lastName= phone= postalCode= state= triton_cns_enabled="
    compgen $compgen_opts -W "$candidates" -- "$word"
}

function complete_tritonupdatefwrulefield {
    local word="$1"
    local candidates
    candidates="description= enabled= rule="
    compgen $compgen_opts -W "$candidates" -- "$word"
}


    # ---- locals

    declare -a argv


    # ---- support functions

    function trace {
        [[ -n "$_triton_log" ]] && echo "$*" >&2
    }

    function _dashdash_complete {
        local idx context
        idx=$1
        context=$2

        local shortopts longopts optargs subcmds allsubcmds argtypes
        shortopts="$(eval "echo \${cmd${context}_shortopts}")"
        longopts="$(eval "echo \${cmd${context}_longopts}")"
        optargs="$(eval "echo \${cmd${context}_optargs}")"
        subcmds="$(eval "echo \${cmd${context}_subcmds}")"
        allsubcmds="$(eval "echo \${cmd${context}_allsubcmds}")"
        IFS=', ' read -r -a argtypes <<< "$(eval "echo \${cmd${context}_argtypes}")"

        trace ""
        trace "_dashdash_complete(idx=$idx, context=$context)"
        trace "  shortopts: $shortopts"
        trace "  longopts: $longopts"
        trace "  optargs: $optargs"
        trace "  subcmds: $subcmds"
        trace "  allsubcmds: $allsubcmds"

        # Get 'state' of option parsing at this COMP_POINT.
        # Copying "dashdash.js#parse()" behaviour here.
        local state=
        local nargs=0
        local i=$idx
        local argtype
        local optname
        local prefix
        local word
        local dashdashseen=
        while [[ $i -lt $len && $i -le $COMP_CWORD ]]; do
            argtype=
            optname=
            prefix=
            word=

            arg=${argv[$i]}
            trace "  consider argv[$i]: '$arg'"

            if [[ "$arg" == "--" && $i -lt $COMP_CWORD ]]; then
                trace "    dashdash seen"
                dashdashseen=yes
                state=arg
                word=$arg
            elif [[ -z "$dashdashseen" && "${arg:0:2}" == "--" ]]; then
                arg=${arg:2}
                if [[ "$arg" == *"="* ]]; then
                    optname=${arg%%=*}
                    val=${arg##*=}
                    trace "    long opt: optname='$optname' val='$val'"
                    state=arg
                    argtype=$(echo "$optargs" | awk -F "-$optname=" '{print $2}' | cut -d' ' -f1)
                    word=$val
                    prefix="--$optname="
                else
                    optname=$arg
                    val=
                    trace "    long opt: optname='$optname'"
                    state=longopt
                    word=--$optname

                    if [[ "$optargs" == *"-$optname="* && $i -lt $COMP_CWORD ]]; then
                        i=$(( $i + 1 ))
                        state=arg
                        argtype=$(echo "$optargs" | awk -F "-$optname=" '{print $2}' | cut -d' ' -f1)
                        word=${argv[$i]}
                        trace "    takes arg (consume argv[$i], word='$word')"
                    fi
                fi
            elif [[ -z "$dashdashseen" && "${arg:0:1}" == "-" ]]; then
                trace "    short opt group"
                state=shortopt
                word=$arg

                local j=1
                while [[ $j -lt ${#arg} ]]; do
                    optname=${arg:$j:1}
                    trace "    consider index $j: optname '$optname'"

                    if [[ "$optargs" == *"-$optname="* ]]; then
                        argtype=$(echo "$optargs" | awk -F "-$optname=" '{print $2}' | cut -d' ' -f1)
                        if [[ $(( $j + 1 )) -lt ${#arg} ]]; then
                            state=arg
                            word=${arg:$(( $j + 1 ))}
                            trace "      takes arg (rest of this arg, word='$word', argtype='$argtype')"
                        elif [[ $i -lt $COMP_CWORD ]]; then
                            state=arg
                            i=$(( $i + 1 ))
                            word=${argv[$i]}
                            trace "    takes arg (word='$word', argtype='$argtype')"
                        fi
                        break
                    fi

                    j=$(( $j + 1 ))
                done
            elif [[ $i -lt $COMP_CWORD && -n "$arg" ]] && $(echo "$allsubcmds" | grep -w "$arg" >/dev/null); then
                trace "    complete subcmd: recurse _dashdash_complete"
                _dashdash_complete $(( $i + 1 )) "${context}__${arg/-/_}"
                return
            else
                trace "    not an opt or a complete subcmd"
                state=arg
                word=$arg
                nargs=$(( $nargs + 1 ))
                if [[ ${#argtypes[@]} -gt 0 ]]; then
                    argtype="${argtypes[$(( $nargs - 1 ))]}"
                    if [[ -z "$argtype" ]]; then
                        # If we have more args than argtypes, we use the
                        # last type.
                        argtype="${argtypes[@]: -1:1}"
                    fi
                fi
            fi

            trace "    state=$state prefix='$prefix' word='$word'"
            i=$(( $i + 1 ))
        done

        trace "  parsed: state=$state optname='$optname' argtype='$argtype' prefix='$prefix' word='$word' dashdashseen=$dashdashseen"
        local compgen_opts=
        if [[ -n "$prefix" ]]; then
            compgen_opts="$compgen_opts -P $prefix"
        fi

        case $state in
        shortopt)
            compgen $compgen_opts -W "$shortopts $longopts" -- "$word"
            ;;
        longopt)
            compgen $compgen_opts -W "$longopts" -- "$word"
            ;;
        arg)
            # If we don't know what completion to do, then emit nothing. We
            # expect that we are running with:
            #       complete -o default ...
            # where "default" means: "Use Readline's default completion if
            # the compspec generates no matches." This gives us the good filename
            # completion, completion in subshells/backticks.
            #
            # We cannot support an argtype="directory" because
            #       compgen -S '/' -A directory -- "$word"
            # doesn't give a satisfying result. It doesn't stop at the trailing '/'
            # so you cannot descend into dirs.
            if [[ "${word:0:1}" == '$' ]]; then
                # By default, Bash will complete '$<TAB>' to all envvars. Apparently
                # 'complete -o default' does *not* give us that. The following
                # gets *close* to the same completions: '-A export' misses envvars
                # like "PS1".
                trace "  completing envvars"
                compgen $compgen_opts -P '$' -A export -- "${word:1}"
            elif [[ -z "$argtype" ]]; then
                # Only include opts in completions if $word is not empty.
                # This is to avoid completing the leading '-', which foils
                # using 'default' completion.
                if [[ -n "$dashdashseen" ]]; then
                    trace "  completing subcmds, if any (no argtype, dashdash seen)"
                    compgen $compgen_opts -W "$subcmds" -- "$word"
                elif [[ -z "$word" ]]; then
                    trace "  completing subcmds, if any (no argtype, empty word)"
                    compgen $compgen_opts -W "$subcmds" -- "$word"
                else
                    trace "  completing opts & subcmds (no argtype)"
                    compgen $compgen_opts -W "$shortopts $longopts $subcmds" -- "$word"
                fi
            elif [[ $argtype == "none" ]]; then
                # We want *no* completions, i.e. some way to get the active
                # 'complete -o default' to not do filename completion.
                trace "  completing 'none' (hack to imply no completions)"
                echo "##-no-completion- -results-##"
            elif [[ $argtype == "file" ]]; then
                # 'complete -o default' gives the best filename completion, at least
                # on Mac.
                trace "  completing 'file' (let 'complete -o default' handle it)"
                echo ""
            elif ! type complete_$argtype 2>/dev/null >/dev/null; then
                trace "  completing '$argtype' (fallback to default b/c complete_$argtype is unknown)"
                echo ""
            else
                trace "  completing custom '$argtype'"
                completions=$(complete_$argtype "$word")
                if [[ -z "$completions" ]]; then
                    trace "  no custom '$argtype' completions"
                    # These are in ascii and "dictionary" order so they sort
                    # correctly.
                    echo "##-no-completion- -results-##"
                else
                    echo $completions
                fi
            fi
            ;;
        *)
            trace "  unknown state: $state"
            ;;
        esac
    }


    trace ""
    trace "-- $(date)"
    #trace "\$IFS: '$IFS'"
    #trace "\$@: '$@'"
    #trace "COMP_WORDBREAKS: '$COMP_WORDBREAKS'"
    trace "COMP_CWORD: '$COMP_CWORD'"
    trace "COMP_LINE: '$COMP_LINE'"
    trace "COMP_POINT: $COMP_POINT"

    # Guard against negative COMP_CWORD. This is a Bash bug at least on
    # Mac 10.10.4's bash. See
    # <https://lists.gnu.org/archive/html/bug-bash/2009-07/msg00125.html>.
    if [[ $COMP_CWORD -lt 0 ]]; then
        trace "abort on negative COMP_CWORD"
        exit 1;
    fi

    # I don't know how to do array manip on argv vars,
    # so copy over to argv array to work on them.
    shift   # the leading '--'
    i=0
    len=$#
    while [[ $# -gt 0 ]]; do
        argv[$i]=$1
        shift;
        i=$(( $i + 1 ))
    done
    trace "argv: '${argv[@]}'"
    trace "argv[COMP_CWORD-1]: '${argv[$(( $COMP_CWORD - 1 ))]}'"
    trace "argv[COMP_CWORD]: '${argv[$COMP_CWORD]}'"
    trace "argv len: '$len'"

    _dashdash_complete 1 ""
}


# ---- mainline

# Note: This if-block to help work with 'compdef' and 'compctl' is
# adapted from 'npm completion'.
if type complete &>/dev/null; then
    function _triton_completion {
        local _log_file=/dev/null
        [[ -z "$_triton_log" ]] || _log_file="$_triton_log"
        COMPREPLY=($(COMP_CWORD="$COMP_CWORD" \
            COMP_LINE="$COMP_LINE" \
            COMP_POINT="$COMP_POINT" \
            _triton_completer -- "${COMP_WORDS[@]}" \
            2>$_log_file)) || return $?
    }
    complete -o default -F _triton_completion triton
elif type compdef &>/dev/null; then
    function _triton_completion {
        local _log_file=/dev/null
        [[ -z "$_triton_log" ]] || _log_file="$_triton_log"
        compadd -- $(COMP_CWORD=$((CURRENT-1)) \
            COMP_LINE=$BUFFER \
            COMP_POINT=0 \
            _triton_completer -- "${words[@]}" \
            2>$_log_file)
    }
    compdef _triton_completion triton
elif type compctl &>/dev/null; then
    function _triton_completion {
        local cword line point words si
        read -Ac words
        read -cn cword
        let cword-=1
        read -l line
        read -ln point
        local _log_file=/dev/null
        [[ -z "$_triton_log" ]] || _log_file="$_triton_log"
        reply=($(COMP_CWORD="$cword" \
            COMP_LINE="$line" \
            COMP_POINT="$point" \
            _triton_completer -- "${words[@]}" \
            2>$_log_file)) || return $?
    }
    compctl -K _triton_completion triton
fi


##
## This is a Bash completion file for the 'triton' command. You can install
## with either:
##
##     cp FILE /usr/local/etc/bash_completion.d/triton   # Mac
##     cp FILE /etc/bash_completion.d/triton             # Linux
##
## or:
##
##     cp FILE > ~/.triton.completion
##     echo "source ~/.triton.completion" >> ~/.bashrc
##
